{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/user/Desktop/assignment_nasa-main/screens/Home.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Headline, ActivityIndicator } from \"react-native-paper\";\nvar baseUrl = \"https://api.nasa.gov/neo/rest/v1/\";\nvar api_key = \"kR7NauroIxGAU1NAeQHwrwffGwL2JHaMyJFHUie6\";\nvar browse = \"browse\";\nvar neo = \"neo/\";\n\nvar Home = function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n\n    _this.handleAsteroidId = function (value) {\n      _this.setState({\n        asetroidId: value\n      });\n    };\n\n    _this.callApiUsingRandomId = function _callee() {\n      var randomId;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(_this.state.random_Ids[Math.floor(Math.random() * _this.state.random_Ids.length)]);\n\n            case 2:\n              randomId = _context.sent;\n\n              if (randomId) {\n                fetch(baseUrl + neo + randomId.id + (\"?api_key=\" + api_key)).then(function (response) {\n                  return response.json();\n                }).then(function (json) {\n                  _this.setState({\n                    object: {\n                      name: json.name,\n                      id: json.id,\n                      nasa_jpl_url: json.nasa_jpl_url,\n                      potential_aestroidId: json.is_potentially_hazardous_asteroid\n                    },\n                    loading: false\n                  }, function () {\n                    _this.props.navigation.navigate(\"Detail\", {\n                      data: _this.state.object\n                    });\n                  });\n\n                  console.log(\"object\", json);\n                }).catch(function (error) {\n                  console.error(error);\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getRandomAsteroidIds = function () {\n      _this.setState({\n        loading: true\n      });\n\n      fetch(baseUrl + neo + browse + (\"?api_key=\" + api_key)).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        console.log(\"random id>>>>>>>>>>>>.\", json);\n\n        _this.setState({\n          random_Ids: json.near_earth_objects\n        }, function () {\n          _this.callApiUsingRandomId();\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n\n    _this.getAsteroidIds = function () {\n      if (_this.state.asetroidId.length == 7) {\n        _this.setState({\n          isLoading: true\n        });\n\n        fetch(baseUrl + neo + _this.state.asetroidId + (\"?api_key=\" + api_key)).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          if (json != null) {\n            _this.setState({\n              object: {\n                id: json == null ? void 0 : json.id,\n                name: json == null ? void 0 : json.name,\n                nasa_jpl_url: json == null ? void 0 : json.nasa_jpl_url,\n                potential_aestroidId: json == null ? void 0 : json.is_potentially_hazardous_asteroid\n              },\n              isLoading: false,\n              asetroidId: \"\"\n            }, function () {\n              _this.props.navigation.navigate(\"Detail\", {\n                data: _this.state.object\n              });\n            });\n\n            console.log(\"object\", json);\n          }\n        }).catch(function (error) {\n          _this.setState({\n            isLoading: false,\n            asetroidId: \"\"\n          });\n\n          console.error(error);\n          alert(\"Please enter valid aestroid id\");\n        });\n      } else {\n        alert(\"Please enter valid aestroid id\");\n      }\n    };\n\n    _this.state = {\n      asetroidId: \"\",\n      loading: false,\n      isLoading: false,\n      object: {\n        name: \"\",\n        nasa_jpl_url: \"\",\n        potential_aestroidId: \"\",\n        id: \"\"\n      },\n      random_Ids: []\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }\n      }, React.createElement(Headline, {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }, \"Get Asteroid Details\"), React.createElement(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(value) {\n          return _this2.handleAsteroidId(value);\n        },\n        value: this.state.asetroidId,\n        placeholder: \"Enter Asteroid ID\",\n        keyboardType: \"numeric\",\n        maxLength: 7,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, this.state.isLoading ? React.createElement(ActivityIndicator, {\n        animating: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }) : React.createElement(Button, {\n        mode: \"contained\",\n        onPress: function onPress() {\n          return _this2.getAsteroidIds();\n        },\n        disabled: this.state.asetroidId == \"\" ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }, \"Submit\")), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }, this.state.loading ? React.createElement(ActivityIndicator, {\n        animating: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }) : React.createElement(Button, {\n        mode: \"contained\",\n        onPress: function onPress() {\n          return _this2.getRandomAsteroidIds();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, \" \", \"Random Asteroid\")));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport { Home as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    borderColor: \"#D3D3D3\",\n    borderRadius: 10,\n    padding: 10,\n    width: 300\n  }\n});","map":{"version":3,"sources":["/home/user/Desktop/assignment_nasa-main/screens/Home.tsx"],"names":["React","Component","Button","Headline","ActivityIndicator","baseUrl","api_key","browse","neo","Home","props","handleAsteroidId","value","setState","asetroidId","callApiUsingRandomId","state","random_Ids","Math","floor","random","length","randomId","fetch","id","then","response","json","object","name","nasa_jpl_url","potential_aestroidId","is_potentially_hazardous_asteroid","loading","navigation","navigate","data","console","log","catch","error","getRandomAsteroidIds","near_earth_objects","getAsteroidIds","isLoading","alert","styles","container","textAlign","input","StyleSheet","create","flex","alignItems","flexDirection","justifyContent","height","margin","borderWidth","borderColor","borderRadius","padding","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, TextInput, View } from \"react-native\";\nimport { Button, Headline, ActivityIndicator } from \"react-native-paper\";\n\nconst baseUrl = \"https://api.nasa.gov/neo/rest/v1/\";\nconst api_key = \"kR7NauroIxGAU1NAeQHwrwffGwL2JHaMyJFHUie6\";\nconst browse = \"browse\";\nconst neo = \"neo/\";\n\ntype MyProps = {\n  route: any;\n  navigation: any;\n};\n\ntype MyState = {\n  asetroidId: any;\n  object: {\n    name: string;\n    nasa_jpl_url: any;\n    potential_aestroidId: any;\n    id: any;\n  };\n  random_Ids: any;\n  isLoading: boolean;\n  loading: boolean;\n};\n\nexport default class Home extends Component<MyProps, MyState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      asetroidId: \"\",\n      loading: false,\n      isLoading: false,\n      object: {\n        name: \"\",\n        nasa_jpl_url: \"\",\n        potential_aestroidId: \"\",\n        id: \"\",\n      },\n      random_Ids: [],\n    };\n  }\n\n  handleAsteroidId = (value: any) => {\n    this.setState({ asetroidId: value });\n  };\n\n  callApiUsingRandomId = async () => {\n    const randomId = await this.state.random_Ids[\n      Math.floor(Math.random() * this.state.random_Ids.length)\n    ];\n    if (randomId) {\n      fetch(baseUrl + neo + randomId.id + `?api_key=${api_key}`)\n        .then((response) => response.json())\n        .then((json) => {\n          this.setState(\n            {\n              object: {\n                name: json.name,\n                id: json.id,\n                nasa_jpl_url: json.nasa_jpl_url,\n                potential_aestroidId: json.is_potentially_hazardous_asteroid,\n              },\n              loading: false,\n            },\n            () => {\n              this.props.navigation.navigate(\"Detail\", {\n                data: this.state.object,\n              });\n            }\n          );\n          console.log(`object`, json);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  };\n  \n  getRandomAsteroidIds = () => {\n    this.setState({ loading: true });\n    fetch(baseUrl + neo + browse + `?api_key=${api_key}`)\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(`random id>>>>>>>>>>>>.`, json);\n        this.setState({ random_Ids: json.near_earth_objects }, () => {\n          this.callApiUsingRandomId();\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  \n  getAsteroidIds = () => {\n    if (this.state.asetroidId.length == 7) {\n      this.setState({ isLoading: true });\n      fetch(baseUrl + neo + this.state.asetroidId + `?api_key=${api_key}`)\n        .then((response) => response.json())\n        .then((json) => {\n          if (json != null) {\n            this.setState(\n              {\n                object: {\n                  id: json?.id,\n                  name: json?.name,\n                  nasa_jpl_url: json?.nasa_jpl_url,\n                  potential_aestroidId: json?.is_potentially_hazardous_asteroid,\n                },\n                isLoading: false,\n                asetroidId: \"\",\n              },\n              () => {\n                this.props.navigation.navigate(\"Detail\", {\n                  data: this.state.object,\n                });\n              }\n            );\n            console.log(`object`, json);\n          }\n        })\n        .catch((error) => {\n          this.setState({ isLoading: false, asetroidId: \"\" });\n          console.error(error);\n          alert(\"Please enter valid aestroid id\");\n        });\n    } else {\n      alert(\"Please enter valid aestroid id\");\n    }\n  };\n  \n  render() {\n    return (\n      <View style={styles.container}>\n        <Headline style={{ textAlign: \"center\" }}>\n          Get Asteroid Details\n        </Headline>\n        <TextInput\n          style={styles.input}\n          onChangeText={(value) => this.handleAsteroidId(value)}\n          value={this.state.asetroidId}\n          placeholder=\"Enter Asteroid ID\"\n          keyboardType=\"numeric\"\n          maxLength={7}\n        />\n        <View>\n          {this.state.isLoading ? (\n            <ActivityIndicator animating={true} />\n          ) : (\n            <Button\n              mode=\"contained\"\n              onPress={() => this.getAsteroidIds()}\n              disabled={this.state.asetroidId == \"\" ? true : false}\n            >\n              Submit\n            </Button>\n          )}\n        </View>\n        <View>\n          {this.state.loading ? (\n            <ActivityIndicator animating={true} />\n          ) : (\n            <Button\n              mode=\"contained\"\n              onPress={() => this.getRandomAsteroidIds()}\n            >\n              {\" \"}\n              Random Asteroid\n            </Button>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    borderColor: \"#D3D3D3\",\n    borderRadius: 10,\n    padding: 10,\n    width: 300,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}